{"version":3,"file":"hierarchy-chart.min.js","sources":["../../../apps/erpnext/erpnext/public/js/hierarchy_chart/hierarchy_chart_desktop.js","../../../apps/erpnext/erpnext/public/js/hierarchy_chart/hierarchy_chart_mobile.js"],"sourcesContent":["import html2canvas from 'html2canvas';\nerpnext.HierarchyChart = class {\n\t/* Options:\n\t\t- doctype\n\t\t- wrapper: wrapper for the hierarchy view\n\t\t- method:\n\t\t\t- to get the data for each node\n\t\t\t- this method should return id, name, title, image, and connections for each node\n\t*/\n\tconstructor(doctype, wrapper, method) {\n\t\tthis.page = wrapper.page;\n\t\tthis.method = method;\n\t\tthis.doctype = doctype;\n\n\t\tthis.setup_page_style();\n\t\tthis.page.main.addClass('frappe-card');\n\n\t\tthis.nodes = {};\n\t\tthis.setup_node_class();\n\t}\n\n\tsetup_page_style() {\n\t\tthis.page.main.css({\n\t\t\t'min-height': '300px',\n\t\t\t'max-height': '600px',\n\t\t\t'overflow': 'auto',\n\t\t\t'position': 'relative'\n\t\t});\n\t}\n\n\tsetup_node_class() {\n\t\tlet me = this;\n\t\tthis.Node = class {\n\t\t\tconstructor({\n\t\t\t\tid, parent, parent_id, image, name, title, expandable, connections, is_root // eslint-disable-line\n\t\t\t}) {\n\t\t\t\t// to setup values passed via constructor\n\t\t\t\t$.extend(this, arguments[0]);\n\n\t\t\t\tthis.expanded = 0;\n\n\t\t\t\tme.nodes[this.id] = this;\n\t\t\t\tme.make_node_element(this);\n\n\t\t\t\tif (!me.all_nodes_expanded) {\n\t\t\t\t\tme.setup_node_click_action(this);\n\t\t\t\t}\n\n\t\t\t\tme.setup_edit_node_action(this);\n\t\t\t}\n\t\t};\n\t}\n\n\tmake_node_element(node) {\n\t\tlet node_card = frappe.render_template('node_card', {\n\t\t\tid: node.id,\n\t\t\tname: node.name,\n\t\t\ttitle: node.title,\n\t\t\timage: node.image,\n\t\t\tparent: node.parent_id,\n\t\t\tconnections: node.connections,\n\t\t\tis_mobile: false\n\t\t});\n\n\t\tnode.parent.append(node_card);\n\t\tnode.$link = $(`[id=\"${node.id}\"]`);\n\t}\n\n\tshow() {\n\t\tthis.setup_actions();\n\t\tif ($(`[data-fieldname=\"company\"]`).length) return;\n\t\tlet me = this;\n\n\t\tlet company = this.page.add_field({\n\t\t\tfieldtype: 'Link',\n\t\t\toptions: 'Company',\n\t\t\tfieldname: 'company',\n\t\t\tplaceholder: __('Select Company'),\n\t\t\tdefault: frappe.defaults.get_default('company'),\n\t\t\tonly_select: true,\n\t\t\treqd: 1,\n\t\t\tchange: () => {\n\t\t\t\tme.company = undefined;\n\t\t\t\t$('#hierarchy-chart-wrapper').remove();\n\n\t\t\t\tif (company.get_value()) {\n\t\t\t\t\tme.company = company.get_value();\n\n\t\t\t\t\t// svg for connectors\n\t\t\t\t\tme.make_svg_markers();\n\t\t\t\t\tme.setup_hierarchy();\n\t\t\t\t\tme.render_root_nodes();\n\t\t\t\t\tme.all_nodes_expanded = false;\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.throw(__('Please select a company first.'));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tcompany.refresh();\n\t\t$(`[data-fieldname=\"company\"]`).trigger('change');\n\t\t$(`[data-fieldname=\"company\"] .link-field`).css('z-index', 2);\n\t}\n\n\tsetup_actions() {\n\t\tlet me = this;\n\t\tthis.page.clear_inner_toolbar();\n\t\tthis.page.add_inner_button(__('Export'), function() {\n\t\t\tme.export_chart();\n\t\t});\n\n\t\tthis.page.add_inner_button(__('Expand All'), function() {\n\t\t\tme.load_children(me.root_node, true);\n\t\t\tme.all_nodes_expanded = true;\n\n\t\t\tme.page.remove_inner_button(__('Expand All'));\n\t\t\tme.page.add_inner_button(__('Collapse All'), function() {\n\t\t\t\tme.setup_hierarchy();\n\t\t\t\tme.render_root_nodes();\n\t\t\t\tme.all_nodes_expanded = false;\n\n\t\t\t\tme.page.remove_inner_button(__('Collapse All'));\n\t\t\t\tme.setup_actions();\n\t\t\t});\n\t\t});\n\t}\n\n\texport_chart() {\n\t\tfrappe.dom.freeze(__('Exporting...'));\n\t\tthis.page.main.css({\n\t\t\t'min-height': '',\n\t\t\t'max-height': '',\n\t\t\t'overflow': 'visible',\n\t\t\t'position': 'fixed',\n\t\t\t'left': '0',\n\t\t\t'top': '0'\n\t\t});\n\n\t\t$('.node-card').addClass('exported');\n\n\t\thtml2canvas(document.querySelector('#hierarchy-chart-wrapper'), {\n\t\t\tscrollY: -window.scrollY,\n\t\t\tscrollX: 0\n\t\t}).then(function(canvas) {\n\t\t\t// Export the canvas to its data URI representation\n\t\t\tlet dataURL = canvas.toDataURL('image/png');\n\n\t\t\t// download the image\n\t\t\tlet a = document.createElement('a');\n\t\t\ta.href = dataURL;\n\t\t\ta.download = 'hierarchy_chart';\n\t\t\ta.click();\n\t\t}).finally(() => {\n\t\t\tfrappe.dom.unfreeze();\n\t\t});\n\n\t\tthis.setup_page_style();\n\t\t$('.node-card').removeClass('exported');\n\t}\n\n\tsetup_hierarchy() {\n\t\tif (this.$hierarchy)\n\t\t\tthis.$hierarchy.remove();\n\n\t\t$(`#connectors`).empty();\n\n\t\t// setup hierarchy\n\t\tthis.$hierarchy = $(\n\t\t\t`<ul class=\"hierarchy\">\n\t\t\t\t<li class=\"root-level level\">\n\t\t\t\t\t<ul class=\"node-children\"></ul>\n\t\t\t\t</li>\n\t\t\t</ul>`);\n\n\t\tthis.page.main\n\t\t\t.find('#hierarchy-chart')\n\t\t\t.empty()\n\t\t\t.append(this.$hierarchy);\n\n\t\tthis.nodes = {};\n\t}\n\n\tmake_svg_markers() {\n\t\t$('#hierarchy-chart-wrapper').remove();\n\n\t\tthis.page.main.append(`\n\t\t\t<div id=\"hierarchy-chart-wrapper\">\n\t\t\t\t<svg id=\"arrows\" width=\"100%\" height=\"100%\">\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<marker id=\"arrowhead-active\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto\" fill=\"var(--blue-500)\">\n\t\t\t\t\t\t\t<path d=\"M 0 0 L 10 5 L 0 10 z\"></path>\n\t\t\t\t\t\t</marker>\n\t\t\t\t\t\t<marker id=\"arrowhead-collapsed\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto\" fill=\"var(--blue-300)\">\n\t\t\t\t\t\t\t<path d=\"M 0 0 L 10 5 L 0 10 z\"></path>\n\t\t\t\t\t\t</marker>\n\n\t\t\t\t\t\t<marker id=\"arrowstart-active\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"5\" markerWidth=\"8\" markerHeight=\"8\" orient=\"auto\" fill=\"var(--blue-500)\">\n\t\t\t\t\t\t\t<circle cx=\"4\" cy=\"4\" r=\"3.5\" fill=\"white\" stroke=\"var(--blue-500)\"/>\n\t\t\t\t\t\t</marker>\n\t\t\t\t\t\t<marker id=\"arrowstart-collapsed\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"5\" markerWidth=\"8\" markerHeight=\"8\" orient=\"auto\" fill=\"var(--blue-300)\">\n\t\t\t\t\t\t\t<circle cx=\"4\" cy=\"4\" r=\"3.5\" fill=\"white\" stroke=\"var(--blue-300)\"/>\n\t\t\t\t\t\t</marker>\n\t\t\t\t\t</defs>\n\t\t\t\t\t<g id=\"connectors\" fill=\"none\">\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t\t<div id=\"hierarchy-chart\">\n\t\t\t\t</div>\n\t\t\t</div>`);\n\t}\n\n\trender_root_nodes(expanded_view=false) {\n\t\tlet me = this;\n\n\t\treturn frappe.call({\n\t\t\tmethod: me.method,\n\t\t\targs: {\n\t\t\t\tcompany: me.company\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tif (r.message.length) {\n\t\t\t\tlet expand_node = undefined;\n\t\t\t\tlet node = undefined;\n\n\t\t\t\t$.each(r.message, (_i, data) => {\n\t\t\t\t\tif ($(`[id=\"${data.id}\"]`).length)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnode = new me.Node({\n\t\t\t\t\t\tid: data.id,\n\t\t\t\t\t\tparent: $('<li class=\"child-node\"></li>').appendTo(me.$hierarchy.find('.node-children')),\n\t\t\t\t\t\tparent_id: undefined,\n\t\t\t\t\t\timage: data.image,\n\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\ttitle: data.title,\n\t\t\t\t\t\texpandable: true,\n\t\t\t\t\t\tconnections: data.connections,\n\t\t\t\t\t\tis_root: true\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!expand_node && data.connections)\n\t\t\t\t\t\texpand_node = node;\n\t\t\t\t});\n\n\t\t\t\tme.root_node = expand_node;\n\t\t\t\tif (!expanded_view) {\n\t\t\t\t\tme.expand_node(expand_node);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\texpand_node(node) {\n\t\tconst is_sibling = this.selected_node && this.selected_node.parent_id === node.parent_id;\n\t\tthis.set_selected_node(node);\n\t\tthis.show_active_path(node);\n\t\tthis.collapse_previous_level_nodes(node);\n\n\t\t// since the previous node collapses, all connections to that node need to be rebuilt\n\t\t// if a sibling node is clicked, connections don't need to be rebuilt\n\t\tif (!is_sibling) {\n\t\t\t// rebuild outgoing connections\n\t\t\tthis.refresh_connectors(node.parent_id);\n\n\t\t\t// rebuild incoming connections\n\t\t\tlet grandparent = $(`[id=\"${node.parent_id}\"]`).attr('data-parent');\n\t\t\tthis.refresh_connectors(grandparent);\n\t\t}\n\n\t\tif (node.expandable && !node.expanded) {\n\t\t\treturn this.load_children(node);\n\t\t}\n\t}\n\n\tcollapse_node() {\n\t\tif (this.selected_node.expandable) {\n\t\t\tthis.selected_node.$children.hide();\n\t\t\t$(`path[data-parent=\"${this.selected_node.id}\"]`).hide();\n\t\t\tthis.selected_node.expanded = false;\n\t\t}\n\t}\n\n\tshow_active_path(node) {\n\t\t// mark node parent on active path\n\t\t$(`[id=\"${node.parent_id}\"]`).addClass('active-path');\n\t}\n\n\tload_children(node, deep=false) {\n\t\tif (!deep) {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() => this.get_child_nodes(node.id),\n\t\t\t\t(child_nodes) => this.render_child_nodes(node, child_nodes)\n\t\t\t]);\n\t\t} else {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() => frappe.dom.freeze(),\n\t\t\t\t() => this.setup_hierarchy(),\n\t\t\t\t() => this.render_root_nodes(true),\n\t\t\t\t() => this.get_all_nodes(),\n\t\t\t\t(data_list) => this.render_children_of_all_nodes(data_list),\n\t\t\t\t() => frappe.dom.unfreeze()\n\t\t\t]);\n\t\t}\n\t}\n\n\tget_child_nodes(node_id) {\n\t\tlet me = this;\n\t\treturn new Promise(resolve => {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: me.method,\n\t\t\t\targs: {\n\t\t\t\t\tparent: node_id,\n\t\t\t\t\tcompany: me.company\n\t\t\t\t}\n\t\t\t}).then(r => resolve(r.message));\n\t\t});\n\t}\n\n\trender_child_nodes(node, child_nodes) {\n\t\tconst last_level = this.$hierarchy.find('.level:last').index();\n\t\tconst current_level = $(`[id=\"${node.id}\"]`).parent().parent().parent().index();\n\n\t\tif (last_level === current_level) {\n\t\t\tthis.$hierarchy.append(`\n\t\t\t\t<li class=\"level\"></li>\n\t\t\t`);\n\t\t}\n\n\t\tif (!node.$children) {\n\t\t\tnode.$children = $('<ul class=\"node-children\"></ul>')\n\t\t\t\t.hide()\n\t\t\t\t.appendTo(this.$hierarchy.find('.level:last'));\n\n\t\t\tnode.$children.empty();\n\n\t\t\tif (child_nodes) {\n\t\t\t\t$.each(child_nodes, (_i, data) => {\n\t\t\t\t\tif (!$(`[id=\"${data.id}\"]`).length) {\n\t\t\t\t\t\tthis.add_node(node, data);\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.add_connector(node.id, data.id);\n\t\t\t\t\t\t}, 250);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tnode.$children.show();\n\t\t$(`path[data-parent=\"${node.id}\"]`).show();\n\t\tnode.expanded = true;\n\t}\n\n\tget_all_nodes() {\n\t\tlet me = this;\n\t\treturn new Promise(resolve => {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'erpnext.utilities.hierarchy_chart.get_all_nodes',\n\t\t\t\targs: {\n\t\t\t\t\tmethod: me.method,\n\t\t\t\t\tcompany: me.company\n\t\t\t\t},\n\t\t\t\tcallback: (r) => {\n\t\t\t\t\tresolve(r.message);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trender_children_of_all_nodes(data_list) {\n\t\tlet entry = undefined;\n\t\tlet node = undefined;\n\n\t\twhile (data_list.length) {\n\t\t\t// to avoid overlapping connectors\n\t\t\tentry = data_list.shift();\n\t\t\tnode = this.nodes[entry.parent];\n\t\t\tif (node) {\n\t\t\t\tthis.render_child_nodes_for_expanded_view(node, entry.data);\n\t\t\t} else if (data_list.length) {\n\t\t\t\tdata_list.push(entry);\n\t\t\t}\n\t\t}\n\t}\n\n\trender_child_nodes_for_expanded_view(node, child_nodes) {\n\t\tnode.$children = $('<ul class=\"node-children\"></ul>');\n\n\t\tconst last_level = this.$hierarchy.find('.level:last').index();\n\t\tconst node_level = $(`[id=\"${node.id}\"]`).parent().parent().parent().index();\n\n\t\tif (last_level === node_level) {\n\t\t\tthis.$hierarchy.append(`\n\t\t\t\t<li class=\"level\"></li>\n\t\t\t`);\n\t\t\tnode.$children.appendTo(this.$hierarchy.find('.level:last'));\n\t\t} else {\n\t\t\tnode.$children.appendTo(this.$hierarchy.find('.level:eq(' + (node_level + 1) + ')'));\n\t\t}\n\n\t\tnode.$children.hide().empty();\n\n\t\tif (child_nodes) {\n\t\t\t$.each(child_nodes, (_i, data) => {\n\t\t\t\tthis.add_node(node, data);\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.add_connector(node.id, data.id);\n\t\t\t\t}, 250);\n\t\t\t});\n\t\t}\n\n\t\tnode.$children.show();\n\t\t$(`path[data-parent=\"${node.id}\"]`).show();\n\t\tnode.expanded = true;\n\t}\n\n\tadd_node(node, data) {\n\t\treturn new this.Node({\n\t\t\tid: data.id,\n\t\t\tparent: $('<li class=\"child-node\"></li>').appendTo(node.$children),\n\t\t\tparent_id: node.id,\n\t\t\timage: data.image,\n\t\t\tname: data.name,\n\t\t\ttitle: data.title,\n\t\t\texpandable: data.expandable,\n\t\t\tconnections: data.connections,\n\t\t\tchildren: undefined\n\t\t});\n\t}\n\n\tadd_connector(parent_id, child_id) {\n\t\t// using pure javascript for better performance\n\t\tconst parent_node = document.getElementById(`${parent_id}`);\n\t\tconst child_node = document.getElementById(`${child_id}`);\n\n\t\tlet path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n\t\t// we need to connect right side of the parent to the left side of the child node\n\t\tconst pos_parent_right = {\n\t\t\tx: parent_node.offsetLeft + parent_node.offsetWidth,\n\t\t\ty: parent_node.offsetTop + parent_node.offsetHeight / 2\n\t\t};\n\t\tconst pos_child_left = {\n\t\t\tx: child_node.offsetLeft - 5,\n\t\t\ty: child_node.offsetTop + child_node.offsetHeight / 2\n\t\t};\n\n\t\tconst connector = this.get_connector(pos_parent_right, pos_child_left);\n\n\t\tpath.setAttribute('d', connector);\n\t\tthis.set_path_attributes(path, parent_id, child_id);\n\n\t\tdocument.getElementById('connectors').appendChild(path);\n\t}\n\n\tget_connector(pos_parent_right, pos_child_left) {\n\t\tif (pos_parent_right.y === pos_child_left.y) {\n\t\t\t// don't add arcs if it's a straight line\n\t\t\treturn \"M\" +\n\t\t\t(pos_parent_right.x) + \",\" + (pos_parent_right.y) + \" \" +\n\t\t\t\"L\"+\n\t\t\t(pos_child_left.x) + \",\" + (pos_child_left.y);\n\t\t} else {\n\t\t\tlet arc_1 = \"\";\n\t\t\tlet arc_2 = \"\";\n\t\t\tlet offset = 0;\n\n\t\t\tif (pos_parent_right.y > pos_child_left.y) {\n\t\t\t\t// if child is above parent on Y axis 1st arc is anticlocwise\n\t\t\t\t// second arc is clockwise\n\t\t\t\tarc_1 = \"a10,10 1 0 0 10,-10 \";\n\t\t\t\tarc_2 = \"a10,10 0 0 1 10,-10 \";\n\t\t\t\toffset = 10;\n\t\t\t} else {\n\t\t\t\t// if child is below parent on Y axis 1st arc is clockwise\n\t\t\t\t// second arc is anticlockwise\n\t\t\t\tarc_1 = \"a10,10 0 0 1 10,10 \";\n\t\t\t\tarc_2 = \"a10,10 1 0 0 10,10 \";\n\t\t\t\toffset = -10;\n\t\t\t}\n\n\t\t\treturn \"M\" + (pos_parent_right.x) + \",\" + (pos_parent_right.y) + \" \" +\n\t\t\t\t\"L\" +\n\t\t\t\t(pos_parent_right.x + 40) + \",\" + (pos_parent_right.y) + \" \" +\n\t\t\t\tarc_1 +\n\t\t\t\t\"L\" +\n\t\t\t\t(pos_parent_right.x + 50) + \",\" + (pos_child_left.y + offset) + \" \" +\n\t\t\t\tarc_2 +\n\t\t\t\t\"L\"+\n\t\t\t\t(pos_child_left.x) + \",\" + (pos_child_left.y);\n\t\t}\n\t}\n\n\tset_path_attributes(path, parent_id, child_id) {\n\t\tpath.setAttribute(\"data-parent\", parent_id);\n\t\tpath.setAttribute(\"data-child\", child_id);\n\t\tconst parent = $(`[id=\"${parent_id}\"]`);\n\n\t\tif (parent.hasClass('active')) {\n\t\t\tpath.setAttribute(\"class\", \"active-connector\");\n\t\t\tpath.setAttribute(\"marker-start\", \"url(#arrowstart-active)\");\n\t\t\tpath.setAttribute(\"marker-end\", \"url(#arrowhead-active)\");\n\t\t} else {\n\t\t\tpath.setAttribute(\"class\", \"collapsed-connector\");\n\t\t\tpath.setAttribute(\"marker-start\", \"url(#arrowstart-collapsed)\");\n\t\t\tpath.setAttribute(\"marker-end\", \"url(#arrowhead-collapsed)\");\n\t\t}\n\t}\n\n\tset_selected_node(node) {\n\t\t// remove active class from the current node\n\t\tif (this.selected_node)\n\t\t\tthis.selected_node.$link.removeClass('active');\n\n\t\t// add active class to the newly selected node\n\t\tthis.selected_node = node;\n\t\tnode.$link.addClass('active');\n\t}\n\n\tcollapse_previous_level_nodes(node) {\n\t\tlet node_parent = $(`[id=\"${node.parent_id}\"]`);\n\t\tlet previous_level_nodes = node_parent.parent().parent().children('li');\n\t\tlet node_card = undefined;\n\n\t\tprevious_level_nodes.each(function() {\n\t\t\tnode_card = $(this).find('.node-card');\n\n\t\t\tif (!node_card.hasClass('active-path')) {\n\t\t\t\tnode_card.addClass('collapsed');\n\t\t\t}\n\t\t});\n\t}\n\n\trefresh_connectors(node_parent) {\n\t\tif (!node_parent) return;\n\n\t\t$(`path[data-parent=\"${node_parent}\"]`).remove();\n\n\t\tfrappe.run_serially([\n\t\t\t() => this.get_child_nodes(node_parent),\n\t\t\t(child_nodes) => {\n\t\t\t\tif (child_nodes) {\n\t\t\t\t\t$.each(child_nodes, (_i, data) => {\n\t\t\t\t\t\tthis.add_connector(node_parent, data.id);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t]);\n\t}\n\n\tsetup_node_click_action(node) {\n\t\tlet me = this;\n\t\tlet node_element = $(`[id=\"${node.id}\"]`);\n\n\t\tnode_element.click(function() {\n\t\t\tconst is_sibling = me.selected_node.parent_id === node.parent_id;\n\n\t\t\tif (is_sibling) {\n\t\t\t\tme.collapse_node();\n\t\t\t} else if (node_element.is(':visible')\n\t\t\t\t&& (node_element.hasClass('collapsed') || node_element.hasClass('active-path'))) {\n\t\t\t\tme.remove_levels_after_node(node);\n\t\t\t\tme.remove_orphaned_connectors();\n\t\t\t}\n\n\t\t\tme.expand_node(node);\n\t\t});\n\t}\n\n\tsetup_edit_node_action(node) {\n\t\tlet node_element = $(`[id=\"${node.id}\"]`);\n\t\tlet me = this;\n\n\t\tnode_element.find('.btn-edit-node').click(function() {\n\t\t\tfrappe.set_route('Form', me.doctype, node.id);\n\t\t});\n\t}\n\n\tremove_levels_after_node(node) {\n\t\tlet level = $(`[id=\"${node.id}\"]`).parent().parent().parent().index();\n\n\t\tlevel = $('.hierarchy > li:eq('+ level + ')');\n\t\tlevel.nextAll('li').remove();\n\n\t\tlet nodes = level.find('.node-card');\n\t\tlet node_object = undefined;\n\n\t\t$.each(nodes, (_i, element) => {\n\t\t\tnode_object = this.nodes[element.id];\n\t\t\tnode_object.expanded = 0;\n\t\t\tnode_object.$children = undefined;\n\t\t});\n\n\t\tnodes.removeClass('collapsed active-path');\n\t}\n\n\tremove_orphaned_connectors() {\n\t\tlet paths = $('#connectors > path');\n\t\t$.each(paths, (_i, path) => {\n\t\t\tconst parent = $(path).data('parent');\n\t\t\tconst child = $(path).data('child');\n\n\t\t\tif ($(`[id=\"${parent}\"]`).length && $(`[id=\"${child}\"]`).length)\n\t\t\t\treturn;\n\n\t\t\t$(path).remove();\n\t\t});\n\t}\n};\n","erpnext.HierarchyChartMobile = class {\n\t/* Options:\n\t\t- doctype\n\t\t- wrapper: wrapper for the hierarchy view\n\t\t- method:\n\t\t\t- to get the data for each node\n\t\t\t- this method should return id, name, title, image, and connections for each node\n\t*/\n\tconstructor(doctype, wrapper, method) {\n\t\tthis.page = wrapper.page;\n\t\tthis.method = method;\n\t\tthis.doctype = doctype;\n\n\t\tthis.page.main.css({\n\t\t\t'min-height': '300px',\n\t\t\t'max-height': '600px',\n\t\t\t'overflow': 'auto',\n\t\t\t'position': 'relative'\n\t\t});\n\t\tthis.page.main.addClass('frappe-card');\n\n\t\tthis.nodes = {};\n\t\tthis.setup_node_class();\n\t}\n\n\tsetup_node_class() {\n\t\tlet me = this;\n\t\tthis.Node = class {\n\t\t\tconstructor({\n\t\t\t\tid, parent, parent_id, image, name, title, expandable, connections, is_root // eslint-disable-line\n\t\t\t}) {\n\t\t\t\t// to setup values passed via constructor\n\t\t\t\t$.extend(this, arguments[0]);\n\n\t\t\t\tthis.expanded = 0;\n\n\t\t\t\tme.nodes[this.id] = this;\n\t\t\t\tme.make_node_element(this);\n\t\t\t\tme.setup_node_click_action(this);\n\t\t\t\tme.setup_edit_node_action(this);\n\t\t\t}\n\t\t};\n\t}\n\n\tmake_node_element(node) {\n\t\tlet node_card = frappe.render_template('node_card', {\n\t\t\tid: node.id,\n\t\t\tname: node.name,\n\t\t\ttitle: node.title,\n\t\t\timage: node.image,\n\t\t\tparent: node.parent_id,\n\t\t\tconnections: node.connections,\n\t\t\tis_mobile: true\n\t\t});\n\n\t\tnode.parent.append(node_card);\n\t\tnode.$link = $(`[id=\"${node.id}\"]`);\n\t\tnode.$link.addClass('mobile-node');\n\t}\n\n\tshow() {\n\t\tlet me = this;\n\t\tif ($(`[data-fieldname=\"company\"]`).length) return;\n\n\t\tlet company = this.page.add_field({\n\t\t\tfieldtype: 'Link',\n\t\t\toptions: 'Company',\n\t\t\tfieldname: 'company',\n\t\t\tplaceholder: __('Select Company'),\n\t\t\tdefault: frappe.defaults.get_default('company'),\n\t\t\tonly_select: true,\n\t\t\treqd: 1,\n\t\t\tchange: () => {\n\t\t\t\tme.company = undefined;\n\n\t\t\t\tif (company.get_value() && me.company != company.get_value()) {\n\t\t\t\t\tme.company = company.get_value();\n\n\t\t\t\t\t// svg for connectors\n\t\t\t\t\tme.make_svg_markers();\n\n\t\t\t\t\tif (me.$sibling_group)\n\t\t\t\t\t\tme.$sibling_group.remove();\n\n\t\t\t\t\t// setup sibling group wrapper\n\t\t\t\t\tme.$sibling_group = $(`<div class=\"sibling-group mt-4 mb-4\"></div>`);\n\t\t\t\t\tme.page.main.append(me.$sibling_group);\n\n\t\t\t\t\tme.setup_hierarchy();\n\t\t\t\t\tme.render_root_nodes();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tcompany.refresh();\n\t\t$(`[data-fieldname=\"company\"]`).trigger('change');\n\t}\n\n\tmake_svg_markers() {\n\t\t$('#arrows').remove();\n\n\t\tthis.page.main.prepend(`\n\t\t\t<svg id=\"arrows\" width=\"100%\" height=\"100%\">\n\t\t\t\t<defs>\n\t\t\t\t\t<marker id=\"arrowhead-active\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto\" fill=\"var(--blue-500)\">\n\t\t\t\t\t\t<path d=\"M 0 0 L 10 5 L 0 10 z\"></path>\n\t\t\t\t\t</marker>\n\t\t\t\t\t<marker id=\"arrowhead-collapsed\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"5\" markerWidth=\"6\" markerHeight=\"6\" orient=\"auto\" fill=\"var(--blue-300)\">\n\t\t\t\t\t\t<path d=\"M 0 0 L 10 5 L 0 10 z\"></path>\n\t\t\t\t\t</marker>\n\n\t\t\t\t\t<marker id=\"arrowstart-active\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"5\" markerWidth=\"8\" markerHeight=\"8\" orient=\"auto\" fill=\"var(--blue-500)\">\n\t\t\t\t\t\t<circle cx=\"4\" cy=\"4\" r=\"3.5\" fill=\"white\" stroke=\"var(--blue-500)\"/>\n\t\t\t\t\t</marker>\n\t\t\t\t\t<marker id=\"arrowstart-collapsed\" viewBox=\"0 0 10 10\" refX=\"3\" refY=\"5\" markerWidth=\"8\" markerHeight=\"8\" orient=\"auto\" fill=\"var(--blue-300)\">\n\t\t\t\t\t\t<circle cx=\"4\" cy=\"4\" r=\"3.5\" fill=\"white\" stroke=\"var(--blue-300)\"/>\n\t\t\t\t\t</marker>\n\t\t\t\t</defs>\n\t\t\t\t<g id=\"connectors\" fill=\"none\">\n\t\t\t\t</g>\n\t\t\t</svg>`);\n\t}\n\n\tsetup_hierarchy() {\n\t\t$(`#connectors`).empty();\n\t\tif (this.$hierarchy)\n\t\t\tthis.$hierarchy.remove();\n\n\t\tif (this.$sibling_group)\n\t\t\tthis.$sibling_group.empty();\n\n\t\tthis.$hierarchy = $(\n\t\t\t`<ul class=\"hierarchy-mobile\">\n\t\t\t\t<li class=\"root-level level\"></li>\n\t\t\t</ul>`);\n\n\t\tthis.page.main.append(this.$hierarchy);\n\t}\n\n\trender_root_nodes() {\n\t\tlet me = this;\n\n\t\tfrappe.call({\n\t\t\tmethod: me.method,\n\t\t\targs: {\n\t\t\t\tcompany: me.company\n\t\t\t},\n\t\t}).then(r => {\n\t\t\tif (r.message.length) {\n\t\t\t\tlet root_level = me.$hierarchy.find('.root-level');\n\t\t\t\troot_level.empty();\n\n\t\t\t\t$.each(r.message, (_i, data) => {\n\t\t\t\t\treturn new me.Node({\n\t\t\t\t\t\tid: data.id,\n\t\t\t\t\t\tparent: root_level,\n\t\t\t\t\t\tparent_id: undefined,\n\t\t\t\t\t\timage: data.image,\n\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\ttitle: data.title,\n\t\t\t\t\t\texpandable: true,\n\t\t\t\t\t\tconnections: data.connections,\n\t\t\t\t\t\tis_root: true\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\texpand_node(node) {\n\t\tconst is_same_node = (this.selected_node && this.selected_node.id === node.id);\n\t\tthis.set_selected_node(node);\n\t\tthis.show_active_path(node);\n\n\t\tif (this.$sibling_group) {\n\t\t\tconst sibling_parent = this.$sibling_group.find('.node-group').attr('data-parent');\n\t\t\tif (node.parent_id !== undefined && node.parent_id != sibling_parent)\n\t\t\t\tthis.$sibling_group.empty();\n\t\t}\n\n\t\tif (!is_same_node) {\n\t\t\t// since the previous/parent node collapses, all connections to that node need to be rebuilt\n\t\t\t// rebuild outgoing connections of parent\n\t\t\tthis.refresh_connectors(node.parent_id, node.id);\n\n\t\t\t// rebuild incoming connections of parent\n\t\t\tlet grandparent = $(`[id=\"${node.parent_id}\"]`).attr('data-parent');\n\t\t\tthis.refresh_connectors(grandparent, node.parent_id);\n\t\t}\n\n\t\tif (node.expandable && !node.expanded) {\n\t\t\treturn this.load_children(node);\n\t\t}\n\t}\n\n\tcollapse_node() {\n\t\tlet node = this.selected_node;\n\t\tif (node.expandable && node.$children) {\n\t\t\tnode.$children.hide();\n\t\t\tnode.expanded = 0;\n\n\t\t\t// add a collapsed level to show the collapsed parent\n\t\t\t// and a button beside it to move to that level\n\t\t\tlet node_parent = node.$link.parent();\n\t\t\tnode_parent.prepend(\n\t\t\t\t`<div class=\"collapsed-level d-flex flex-row\"></div>`\n\t\t\t);\n\n\t\t\tnode_parent\n\t\t\t\t.find('.collapsed-level')\n\t\t\t\t.append(node.$link);\n\n\t\t\tfrappe.run_serially([\n\t\t\t\t() => this.get_child_nodes(node.parent_id, node.id),\n\t\t\t\t(child_nodes) => this.get_node_group(child_nodes, node.parent_id),\n\t\t\t\t(node_group) => node_parent.find('.collapsed-level').append(node_group),\n\t\t\t\t() => this.setup_node_group_action()\n\t\t\t]);\n\t\t}\n\t}\n\n\tshow_active_path(node) {\n\t\t// mark node parent on active path\n\t\t$(`[id=\"${node.parent_id}\"]`).addClass('active-path');\n\t}\n\n\tload_children(node) {\n\t\tfrappe.run_serially([\n\t\t\t() => this.get_child_nodes(node.id),\n\t\t\t(child_nodes) => this.render_child_nodes(node, child_nodes)\n\t\t]);\n\t}\n\n\tget_child_nodes(node_id, exclude_node=null) {\n\t\tlet me = this;\n\t\treturn new Promise(resolve => {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: me.method,\n\t\t\t\targs: {\n\t\t\t\t\tparent: node_id,\n\t\t\t\t\tcompany: me.company,\n\t\t\t\t\texclude_node: exclude_node\n\t\t\t\t}\n\t\t\t}).then(r => resolve(r.message));\n\t\t});\n\t}\n\n\trender_child_nodes(node, child_nodes) {\n\t\tif (!node.$children) {\n\t\t\tnode.$children = $('<ul class=\"node-children\"></ul>')\n\t\t\t\t.hide()\n\t\t\t\t.appendTo(node.$link.parent());\n\n\t\t\tnode.$children.empty();\n\n\t\t\tif (child_nodes) {\n\t\t\t\t$.each(child_nodes, (_i, data) => {\n\t\t\t\t\tthis.add_node(node, data);\n\t\t\t\t\t$(`[id=\"${data.id}\"]`).addClass('active-child');\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.add_connector(node.id, data.id);\n\t\t\t\t\t}, 250);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tnode.$children.show();\n\t\tnode.expanded = 1;\n\t}\n\n\tadd_node(node, data) {\n\t\tvar $li = $('<li class=\"child-node\"></li>');\n\n\t\treturn new this.Node({\n\t\t\tid: data.id,\n\t\t\tparent: $li.appendTo(node.$children),\n\t\t\tparent_id: node.id,\n\t\t\timage: data.image,\n\t\t\tname: data.name,\n\t\t\ttitle: data.title,\n\t\t\texpandable: data.expandable,\n\t\t\tconnections: data.connections,\n\t\t\tchildren: undefined\n\t\t});\n\t}\n\n\tadd_connector(parent_id, child_id) {\n\t\tconst parent_node = document.getElementById(`${parent_id}`);\n\t\tconst child_node = document.getElementById(`${child_id}`);\n\n\t\tconst path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n\t\tlet connector = undefined;\n\n\t\tif ($(`[id=\"${parent_id}\"]`).hasClass('active')) {\n\t\t\tconnector = this.get_connector_for_active_node(parent_node, child_node);\n\t\t} else if ($(`[id=\"${parent_id}\"]`).hasClass('active-path')) {\n\t\t\tconnector = this.get_connector_for_collapsed_node(parent_node, child_node);\n\t\t}\n\n\t\tpath.setAttribute('d', connector);\n\t\tthis.set_path_attributes(path, parent_id, child_id);\n\n\t\tdocument.getElementById('connectors').appendChild(path);\n\t}\n\n\tget_connector_for_active_node(parent_node, child_node) {\n\t\t// we need to connect the bottom left of the parent to the left side of the child node\n\t\tlet pos_parent_bottom = {\n\t\t\tx: parent_node.offsetLeft + 20,\n\t\t\ty: parent_node.offsetTop + parent_node.offsetHeight\n\t\t};\n\t\tlet pos_child_left = {\n\t\t\tx: child_node.offsetLeft - 5,\n\t\t\ty: child_node.offsetTop + child_node.offsetHeight / 2\n\t\t};\n\n\t\tlet connector =\n\t\t\t\"M\" +\n\t\t\t(pos_parent_bottom.x) + \",\" + (pos_parent_bottom.y) + \" \" +\n\t\t\t\"L\" +\n\t\t\t(pos_parent_bottom.x) + \",\" + (pos_child_left.y - 10) + \" \" +\n\t\t\t\"a10,10 1 0 0 10,10 \" +\n\t\t\t\"L\" +\n\t\t\t(pos_child_left.x) + \",\" + (pos_child_left.y);\n\n\t\treturn connector;\n\t}\n\n\tget_connector_for_collapsed_node(parent_node, child_node) {\n\t\t// we need to connect the bottom left of the parent to the top left of the child node\n\t\tlet pos_parent_bottom = {\n\t\t\tx: parent_node.offsetLeft + 20,\n\t\t\ty: parent_node.offsetTop + parent_node.offsetHeight\n\t\t};\n\t\tlet pos_child_top = {\n\t\t\tx: child_node.offsetLeft + 20,\n\t\t\ty: child_node.offsetTop\n\t\t};\n\n\t\tlet connector =\n\t\t\t\"M\" +\n\t\t\t(pos_parent_bottom.x) + \",\" + (pos_parent_bottom.y) + \" \" +\n\t\t\t\"L\" +\n\t\t\t(pos_child_top.x) + \",\" + (pos_child_top.y);\n\n\t\treturn connector;\n\t}\n\n\tset_path_attributes(path, parent_id, child_id) {\n\t\tpath.setAttribute(\"data-parent\", parent_id);\n\t\tpath.setAttribute(\"data-child\", child_id);\n\t\tconst parent = $(`[id=\"${parent_id}\"]`);\n\n\t\tif (parent.hasClass('active')) {\n\t\t\tpath.setAttribute(\"class\", \"active-connector\");\n\t\t\tpath.setAttribute(\"marker-start\", \"url(#arrowstart-active)\");\n\t\t\tpath.setAttribute(\"marker-end\", \"url(#arrowhead-active)\");\n\t\t} else if (parent.hasClass('active-path')) {\n\t\t\tpath.setAttribute(\"class\", \"collapsed-connector\");\n\t\t}\n\t}\n\n\tset_selected_node(node) {\n\t\t// remove .active class from the current node\n\t\tif (this.selected_node)\n\t\t\tthis.selected_node.$link.removeClass('active');\n\n\t\t// add active class to the newly selected node\n\t\tthis.selected_node = node;\n\t\tnode.$link.addClass('active');\n\t}\n\n\tsetup_node_click_action(node) {\n\t\tlet me = this;\n\t\tlet node_element = $(`[id=\"${node.id}\"]`);\n\n\t\tnode_element.click(function() {\n\t\t\tlet el = undefined;\n\n\t\t\tif (node.is_root) {\n\t\t\t\tel = $(this).detach();\n\t\t\t\tme.$hierarchy.empty();\n\t\t\t\t$(`#connectors`).empty();\n\t\t\t\tme.add_node_to_hierarchy(el, node);\n\t\t\t} else if (node_element.is(':visible') && node_element.hasClass('active-path')) {\n\t\t\t\tme.remove_levels_after_node(node);\n\t\t\t\tme.remove_orphaned_connectors();\n\t\t\t} else {\n\t\t\t\tel = $(this).detach();\n\t\t\t\tme.add_node_to_hierarchy(el, node);\n\t\t\t\tme.collapse_node();\n\t\t\t}\n\n\t\t\tme.expand_node(node);\n\t\t});\n\t}\n\n\tsetup_edit_node_action(node) {\n\t\tlet node_element = $(`[id=\"${node.id}\"]`);\n\t\tlet me = this;\n\n\t\tnode_element.find('.btn-edit-node').click(function() {\n\t\t\tfrappe.set_route('Form', me.doctype, node.id);\n\t\t});\n\t}\n\n\tsetup_node_group_action() {\n\t\tlet me = this;\n\n\t\t$('.node-group').on('click', function() {\n\t\t\tlet parent = $(this).attr('data-parent');\n\t\t\tif (parent === 'undefined') {\n\t\t\t\tme.setup_hierarchy();\n\t\t\t\tme.render_root_nodes();\n\t\t\t} else {\n\t\t\t\tme.expand_sibling_group_node(parent);\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_node_to_hierarchy(node_element, node) {\n\t\tthis.$hierarchy.append(`<li class=\"level\"></li>`);\n\t\tnode_element.removeClass('active-child active-path');\n\t\tthis.$hierarchy.find('.level:last').append(node_element);\n\n\t\tlet node_object = this.nodes[node.id];\n\t\tnode_object.expanded = 0;\n\t\tnode_object.$children = undefined;\n\t\tthis.nodes[node.id] = node_object;\n\t}\n\n\tget_node_group(nodes, parent, collapsed=true) {\n\t\tlet limit = 2;\n\t\tconst display_nodes = nodes.slice(0, limit);\n\t\tconst extra_nodes = nodes.slice(limit);\n\n\t\tlet html = display_nodes.map(node =>\n\t\t\tthis.get_avatar(node)\n\t\t).join('');\n\n\t\tif (extra_nodes.length === 1) {\n\t\t\tlet node = extra_nodes[0];\n\t\t\thtml += this.get_avatar(node);\n\t\t} else if (extra_nodes.length > 1) {\n\t\t\thtml = `\n\t\t\t\t${html}\n\t\t\t\t<span class=\"avatar avatar-small\">\n\t\t\t\t\t<div class=\"avatar-frame standard-image avatar-extra-count\"\n\t\t\t\t\t\ttitle=\"${extra_nodes.map(node => node.name).join(', ')}\">\n\t\t\t\t\t\t+${extra_nodes.length}\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t`;\n\t\t}\n\n\t\tif (html) {\n\t\t\tconst $node_group =\n\t\t\t\t$(`<div class=\"node-group card cursor-pointer\" data-parent=${parent}>\n\t\t\t\t\t<div class=\"avatar-group right overlap\">\n\t\t\t\t\t\t${html}\n\t\t\t\t\t</div>\n\t\t\t\t</div>`);\n\n\t\t\tif (collapsed)\n\t\t\t\t$node_group.addClass('collapsed');\n\n\t\t\treturn $node_group;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tget_avatar(node) {\n\t\treturn `<span class=\"avatar avatar-small\" title=\"${node.name}\">\n\t\t\t<span class=\"avatar-frame\" src=${node.image} style=\"background-image: url(${node.image})\"></span>\n\t\t</span>`;\n\t}\n\n\texpand_sibling_group_node(parent) {\n\t\tlet node_object = this.nodes[parent];\n\t\tlet node = node_object.$link;\n\n\t\tnode.removeClass('active-child active-path');\n\t\tnode_object.expanded = 0;\n\t\tnode_object.$children = undefined;\n\t\tthis.nodes[node.id] = node_object;\n\n\t\t// show parent's siblings and expand parent node\n\t\tfrappe.run_serially([\n\t\t\t() => this.get_child_nodes(node_object.parent_id, node_object.id),\n\t\t\t(child_nodes) => this.get_node_group(child_nodes, node_object.parent_id, false),\n\t\t\t(node_group) => {\n\t\t\t\tif (node_group)\n\t\t\t\t\tthis.$sibling_group.empty().append(node_group);\n\t\t\t},\n\t\t\t() => this.setup_node_group_action(),\n\t\t\t() => this.reattach_and_expand_node(node, node_object)\n\t\t]);\n\t}\n\n\treattach_and_expand_node(node, node_object) {\n\t\tvar el = node.detach();\n\n\t\tthis.$hierarchy.empty().append(`\n\t\t\t<li class=\"level\"></li>\n\t\t`);\n\t\tthis.$hierarchy.find('.level').append(el);\n\t\t$(`#connectors`).empty();\n\t\tthis.expand_node(node_object);\n\t}\n\n\tremove_levels_after_node(node) {\n\t\tlet level = $(`[id=\"${node.id}\"]`).parent().parent().index();\n\n\t\tlevel = $('.hierarchy-mobile > li:eq('+ level + ')');\n\t\tlevel.nextAll('li').remove();\n\n\t\tlet node_object = this.nodes[node.id];\n\t\tlet current_node = level.find(`[id=\"${node.id}\"]`).detach();\n\n\t\tcurrent_node.removeClass('active-child active-path');\n\n\t\tnode_object.expanded = 0;\n\t\tnode_object.$children = undefined;\n\n\t\tlevel.empty().append(current_node);\n\t}\n\n\tremove_orphaned_connectors() {\n\t\tlet paths = $('#connectors > path');\n\t\t$.each(paths, (_i, path) => {\n\t\t\tconst parent = $(path).data('parent');\n\t\t\tconst child = $(path).data('child');\n\n\t\t\tif ($(`[id=\"${parent}\"]`).length && $(`[id=\"${child}\"]`).length)\n\t\t\t\treturn;\n\n\t\t\t$(path).remove();\n\t\t});\n\t}\n\n\trefresh_connectors(node_parent, node_id) {\n\t\tif (!node_parent) return;\n\n\t\t$(`path[data-parent=\"${node_parent}\"]`).remove();\n\t\tthis.add_connector(node_parent, node_id);\n\t}\n};\n"],"names":["erpnext","HierarchyChart","[object Object]","doctype","wrapper","method","this","page","setup_page_style","main","addClass","nodes","setup_node_class","css","min-height","max-height","overflow","position","let","me","Node","ref","$","extend","arguments","expanded","id","make_node_element","all_nodes_expanded","setup_node_click_action","setup_edit_node_action","node","node_card","frappe","render_template","name","title","image","parent","parent_id","connections","is_mobile","append","$link","setup_actions","length","company","add_field","fieldtype","options","fieldname","placeholder","__","default","defaults","get_default","only_select","reqd","change","undefined","remove","get_value","make_svg_markers","setup_hierarchy","render_root_nodes","throw","refresh","trigger","clear_inner_toolbar","add_inner_button","export_chart","load_children","root_node","remove_inner_button","dom","freeze","left","top","html2canvas","document","querySelector","scrollY","window","scrollX","then","canvas","dataURL","toDataURL","a","createElement","href","download","click","finally","unfreeze","removeClass","$hierarchy","empty","find","expanded_view","call","args","r","message","expand_node","each","_i","data","appendTo","expandable","is_root","const","is_sibling","selected_node","set_selected_node","show_active_path","collapse_previous_level_nodes","refresh_connectors","grandparent","attr","$children","hide","deep","run_serially","get_all_nodes","data_list","render_children_of_all_nodes","get_child_nodes","child_nodes","render_child_nodes","node_id","Promise","resolve","index","add_node","setTimeout","add_connector","show","callback","entry","shift","render_child_nodes_for_expanded_view","push","last_level","node_level","children","child_id","parent_node","getElementById","child_node","path","createElementNS","pos_parent_right","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","pos_child_left","connector","get_connector","setAttribute","set_path_attributes","appendChild","arc_1","arc_2","offset","hasClass","previous_level_nodes","node_parent","node_element","collapse_node","is","remove_levels_after_node","remove_orphaned_connectors","set_route","level","nextAll","node_object","element","paths","child","HierarchyChartMobile","$sibling_group","prepend","root_level","is_same_node","sibling_parent","get_node_group","node_group","setup_node_group_action","exclude_node","$li","get_connector_for_active_node","get_connector_for_collapsed_node","pos_parent_bottom","el","detach","add_node_to_hierarchy","on","expand_sibling_group_node","collapsed","display_nodes","slice","extra_nodes","html","map","get_avatar","join","$node_group","reattach_and_expand_node","current_node"],"mappings":"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"}